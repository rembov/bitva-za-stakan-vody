/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.xerial:sqlite-jdbc:3.46.0.0'
    implementation 'org.slf4j:slf4j-nop:2.0.13'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.bitva.Main'
}

run {
    standardInput = System.in
}

tasks.withType(JavaCompile) {
    configure(options) {
        encoding = 'UTF-8'
    }
}

// tasks.named('test') {
//     // Use JUnit Platform for unit tests.
//     useJUnitPlatform()
// }
task wrapper(type:Wrapper){
        gradleVersion = '8.8'
    }

task fatJar(type: Jar) {
	manifest {
		attributes 'Main-Class': 'org.bitva.Main'
	}
	archiveBaseName = project.name + '-all'


	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}
